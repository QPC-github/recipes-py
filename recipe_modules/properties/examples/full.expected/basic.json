[
  {
    "cmd": [
      "echo",
      "test_prop {\n  key: \"value\"\n}\nlist: \"some\"\nlist: \"strings\"\ndict {\n  fields {\n    key: \"cool\"\n    value {\n      string_value: \"dictionary\"\n    }\n  }\n  fields {\n    key: \"float_val\"\n    value {\n      number_value: 12345678.6789\n    }\n  }\n  fields {\n    key: \"secretly_int_val\"\n    value {\n      number_value: 123456789.0\n    }\n  }\n}\nparam_name_test: \"thing\"\n"
    ],
    "name": "echo props"
  },
  {
    "cmd": [
      "echo",
      "FROM_ENV: \"mocked_env\"\n"
    ],
    "name": "echo env_props"
  },
  {
    "cmd": [
      "echo",
      "('$fake_repo/fake_module', {'test_prop': {'key': 'value'}})",
      "('arbitrary_property', True)",
      "('dict', {'cool': 'dictionary', 'float_val': 12345678.6789, 'secretly_int_val': 123456789})",
      "('list', ['some', 'strings'])",
      "('param_name_test', 'thing')",
      "('recipe', 'properties:examples/full')",
      "('test_prop', {'key': 'value'})"
    ],
    "name": "echo all"
  },
  {
    "cmd": [
      "echo",
      "FrozenDict([('test_prop', FrozenDict([('key', 'value')]))])"
    ],
    "name": "echo $fake_repo/fake_module"
  },
  {
    "cmd": [
      "echo",
      "True"
    ],
    "name": "echo arbitrary_property"
  },
  {
    "cmd": [
      "echo",
      "FrozenDict([('cool', 'dictionary'), ('float_val', 12345678.6789), ('secretly_int_val', 123456789)])"
    ],
    "name": "echo dict"
  },
  {
    "cmd": [
      "echo",
      "('some', 'strings')"
    ],
    "name": "echo list"
  },
  {
    "cmd": [
      "echo",
      "'thing'"
    ],
    "name": "echo param_name_test"
  },
  {
    "cmd": [
      "echo",
      "'properties:examples/full'"
    ],
    "name": "echo recipe"
  },
  {
    "cmd": [
      "echo",
      "FrozenDict([('key', 'value')])"
    ],
    "name": "echo test_prop"
  },
  {
    "name": "$result"
  }
]