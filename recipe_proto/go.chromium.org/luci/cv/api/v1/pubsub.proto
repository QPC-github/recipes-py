// Copyright 2021 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package cv.v1;

import "go.chromium.org/luci/cv/api/v1/run.proto";

option go_package = "go.chromium.org/luci/cv/api/v1;cvpb";

// PubSubRun includes the high-level information about the CV Run sent via
// PubSub.
//
// This includes a subset of the fields defined in Run message.
// Use "runs.GetRun" rpc to retrieve the full field set of Runs.
message PubSubRun {
  // The unique ID of the Run.
  //
  // The format of an ID is "projects/$luci-project/runs/$id", where
  // - luci-project is the name of the LUCI project the Run belongs to
  // - id is an opaque key unique in the LUCI project.
  string id = 1;
  // The Run status, e.g. pending, running, cancelled, etc.
  Run.Status status = 2;
  // eversion is the entity version, which is monotonically increasing.
  int64 eversion = 3;
  // The hostname of the CV service that published the message.
  string hostname = 4;
}
